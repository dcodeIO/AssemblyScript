on:
  push:
    branches: 
      - master
jobs:
  publish:
    name: "Publish to npm and gpr"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: dist
    - name: Merge master
      run: |
        git fetch origin
        git merge origin/master
    - uses: actions/setup-node@v1
    - name: Install dependencies
      run: npm ci
    - name: Build distribution files
      run: npm run make
    - name: Set up version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(node -e "console.log(require('./package.json').version)")
        git add -f dist/*
        if git rev-parse v$VERSION >/dev/null 2>&1; then
          VERSION=$VERSION-nightly.$(date "+%Y%m%d")
          if git rev-parse v$VERSION >/dev/null 2>&1; then
            echo "Nightly {$VERSION} does already exist."
            exit 0
          fi
          echo ::set-env name=CHANNEL::nightly
          echo "Committing nightly ($VERSION) ..."
          git commit -m "Nightly v$VERSION"
          npm version $VERSION --no-git-tag-version --force
        else
          echo ::set-env name=CHANNEL::latest
          echo "Committing release ($VERSION) ..."
          git commit -m "Release v$VERSION"
        fi
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git remote set-url origin "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
        git tag v$VERSION
        git push origin dist --follow-tags
    # - name: Publish to npm
    #   run: npm publish --tag $CHANNEL
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    # - uses: actions/setup-node@v1
    #   with:
    #     registry-url: 'https://npm.pkg.github.com'
    # - name: Publish to gpr
    #   run: npm publish --tag $CHANNEL
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
